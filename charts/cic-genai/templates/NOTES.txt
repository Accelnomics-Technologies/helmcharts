1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if or (contains "NodePort" (index .Values.service 0).type) (contains "LoadBalancer" (index .Values.service 0).type) }}
  {{- range $service := .Values.service }}
    {{- if or (eq "NodePort" $service.type) (eq "LoadBalancer" $service.type) }}
      {{- if eq $service.type "LoadBalancer" }}
        NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        You can watch the status by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "cic-genai.fullname" . }}'
      {{- end }}
      export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "cic-genai.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
      echo http://$SERVICE_IP:{{ $service.port }}
      exit
    {{- end }}
  {{- end }}
{{- else if contains "ClusterIP" (index .Values.service 0).type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "cic-genai.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}
